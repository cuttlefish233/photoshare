-- MySQL 5.7.19
DROP SCHEMA IF EXISTS PHOTOSHARE1;
CREATE DATABASE PHOTOSHARE1;
USE PHOTOSHARE1;

-- CREATE USER TABLE
CREATE TABLE USER (
    UID INT NOT NULL AUTO_INCREMENT,
    CONTRIBUTION INT,
    GENDER VARCHAR(6),
    EMAIL VARCHAR(40) UNIQUE,
    PASSWORD VARCHAR(40) NOT NULL,
    DOB DATE NOT NULL,
    HOMETOWN VARCHAR(40),
    FNAME VARCHAR(40) NOT NULL,
    LNAME VARCHAR(40) NOT NULL,
    PRIMARY KEY (UID)
);

-- CREATE FRIENDSHIP TABLE
CREATE TABLE FRIENDSHIP(
	UID1 INT NOT NULL,
	UID2 INT NOT NULL,
	PRIMARY KEY(UID1, UID2), 
	FOREIGN KEY (UID1) REFERENCES USER(UID) ON DELETE CASCADE,
	FOREIGN KEY (UID2) REFERENCES USER(UID) ON DELETE CASCADE
);


-- CREATE Album TABLE (include album entity and 'own' relationship) 
CREATE TABLE ALBUM(
	AID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(40) NOT NULL,
	DOC TIMESTAMP NOT NULL,
	UID INT NOT NULL,
	PRIMARY KEY (AID),
	FOREIGN KEY (UID) REFERENCES USER(UID) ON DELETE CASCADE
);

-- CREATE Photo TABLE (include photo entity and 'contains' relationship) 
CREATE TABLE PHOTO(
	PID INT NOT NULL AUTO_INCREMENT,
	CAPTION VARCHAR(200),
	PHOTOURL VARCHAR(200) NOT NULL,
	AID INT NOT NULL,
	PRIMARY KEY (PID),  
	FOREIGN KEY (AID) REFERENCES ALBUM(AID) 
);

-- CREATE Comment TABLE (include comment entity and 'comment' relationship)
CREATE TABLE COMMENT(
	CID INT NOT NULL AUTO_INCREMENT,
	CONTENT VARCHAR(200) NOT NULL,
	DOC TIMESTAMP NOT NULL,
	UID INT NOT NULL,
	PID INT NOT NULL,
	PRIMARY KEY (CID),
	FOREIGN KEY (UID) REFERENCES USER(UID) ON DELETE CASCADE,
	FOREIGN KEY (PID) REFERENCES PHOTO(PID) 
);

-- CREATE THE LIKETABLE. WE CAN'T name it LIKE
CREATE TABLE LIKETABLE(
	UID INT NOT NULL,
	PID INT NOT NULL,
	DOC TIMESTAMP NOT NULL,
        PRIMARY KEY (UID, PID),
	FOREIGN KEY (UID) REFERENCES USER(UID) ON DELETE CASCADE,
	FOREIGN KEY (PID) REFERENCES PHOTO(PID) ON DELETE CASCADE
);


-- CREATE Tag TABLE 
CREATE TABLE TAG(
	HASHTAG VARCHAR(40) NOT NULL,
	PRIMARY KEY (HASHTAG)
);

-- CREATE Associate Table
CREATE TABLE ASSOCIATE(
	PID INT NOT NULL,
	HASHTAG VARCHAR(40) NOT NULL,
        PRIMARY KEY (PID, HASHTAG),
	FOREIGN KEY (HASHTAG) REFERENCES TAG(HASHTAG) ON DELETE CASCADE,
	FOREIGN KEY (PID) REFERENCES PHOTO(PID) ON DELETE CASCADE
);
-- Account of anonymous visitor
INSERT INTO USER(EMAIL,PASSWORD,FNAME,LNAME,DOB) VALUES ("Visitor","123","123","123","1990-01-01");

-- Calculation of user contribution
CREATE TRIGGER photoContri
AFTER INSERT ON Photo
FOR EACH ROW
	UPDATE USER,ALBUM SET USER.CONTRIBUTION = USER.CONTRIBUTION + 1 WHERE USER.UID=ALBUM.UID AND ALBUM.AID=New.AID;


CREATE TRIGGER photoDelContri
AFTER DELETE ON Photo
FOR EACH ROW
	UPDATE USER,ALBUM SET USER.CONTRIBUTION = USER.CONTRIBUTION - 1 WHERE USER.UID=ALBUM.UID AND ALBUM.AID=OLD.AID;


CREATE TRIGGER commentContri
AFTER INSERT ON COMMENT
FOR EACH ROW
	UPDATE USER,ALBUM,PHOTO SET USER.CONTRIBUTION = USER.CONTRIBUTION + 1 WHERE USER.UID=ALBUM.UID AND ALBUM.AID=PHOTO.AID AND
																														 PHOTO.PID=New.PID;
CREATE TRIGGER commentDelContri
AFTER DELETE ON COMMENT
FOR EACH ROW
	UPDATE USER,PHOTO,ALBUM SET USER.CONTRIBUTION = USER.CONTRIBUTION - 1 WHERE  PHOTO.PID=OLD.PID AND ALBUM.AID=PHOTO.AID
																														AND 	USER.UID=ALBUM.UID;
